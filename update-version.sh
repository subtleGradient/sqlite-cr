#!/usr/bin/env bash
set -euo pipefail

# update-version.sh
# Script to update cr-sqlite version and regenerate hashes
# Makes version bumps painless and ensures green commits

if [ $# -ne 1 ]; then
    echo "Usage: $0 <new-version>"
    echo "Example: $0 0.17.0"
    exit 1
fi

NEW_VERSION="$1"
echo "Updating to cr-sqlite v$NEW_VERSION..."

# Update version in flake.nix
sed -i.bak "s/version = \".*\";/version = \"$NEW_VERSION\";/" flake.nix
rm -f flake.nix.bak

# Prepare new hashes file
cat > hashes.nix.new <<EOF
# Cryptographic hashes for cr-sqlite v$NEW_VERSION binaries
# Auto-generated by update-version.sh - do not edit manually
{
EOF

PLATFORMS=(
    "aarch64-darwin"
    "x86_64-darwin"
    "x86_64-linux"
    "aarch64-linux"
)

echo "Fetching new hashes..."
for platform in "${PLATFORMS[@]}"; do
    echo -n "  $platform: "
    
    # Determine platform parts
    case $platform in
        *-darwin) os="darwin" ;;
        *-linux) os="linux" ;;
    esac
    
    case $platform in
        aarch64-*) arch="aarch64" ;;
        x86_64-*) arch="x86_64" ;;
    esac
    
    url="https://github.com/vlcn-io/cr-sqlite/releases/download/v${NEW_VERSION}/crsqlite-${os}-${arch}.zip"
    
    # Fetch hash with proper error handling
    if hash=$(nix-prefetch-url "$url" --unpack 2>/dev/null); then
        echo "✓"
        # nix-prefetch-url outputs base32, but Nix accepts both base32 and base64 in SRI format
        # We'll use the base32 format with sha256- prefix (SRI format)
        sri_hash="sha256-$hash"
        echo "  \"$platform\" = \"$sri_hash\";" >> hashes.nix.new
    else
        echo "✗ FAILED"
        echo "Error: Failed to fetch $platform binary from $url" >&2
        rm -f hashes.nix.new
        exit 1
    fi
done

echo "}" >> hashes.nix.new

# Replace old hashes file
mv hashes.nix.new hashes.nix

echo
echo "Running tests..."
if nix run .#tests; then
    echo
    echo "✅ Version bumped to $NEW_VERSION successfully!"
    echo
    echo "Next steps:"
    echo "1. Review changes:"
    echo "   git diff flake.nix hashes.nix"
    echo "2. Commit:"
    echo "   git add flake.nix hashes.nix"
    echo "   git commit -m 'chore: update cr-sqlite to v$NEW_VERSION'"
else
    echo
    echo "❌ Tests failed! Version bump incomplete."
    echo "Please check the test output above."
    exit 1
fi